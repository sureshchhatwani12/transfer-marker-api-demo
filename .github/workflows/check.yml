name: "Check whether new release is available"
on:
    workflow_dispatch: 
    schedule:
        - cron: '0 */4 * * *'

jobs:
    checkout-transfer-market-api:
        runs-on: ubuntu-latest
        outputs:
            imageTag: ${{steps.getsha.outputs.latest_sha}}"
        steps: 
            - uses: actions/checkout@v4
              with:
                repository: "felipeall/transfermarkt-api"
                path: './transfermarket-api'
            
            - id: getsha
              working-directory: "./transfermarket-api"
              name: 'Get SHA'
              run: | 
                latest_sha=$(git rev-parse HEAD)
                echo "Output [$latest_sha]"
                echo "latest_sha=$latest_sha" >> $GITHUB_OUTPUT  

            - id: check
              name: 'Check if build is required or not'
              working-directory: "./transfermarket-api"
              run: |
                latest_sha=$(git rev-parse HEAD)
                # Compare the provided SHA with the latest SHA and confirm whether build is required
                if [ "${{vars.LATEST_SHA}}" = "$latest_sha" ]; then
                    echo "true=$isBuild" >> $GITHUB_OUTPUT    
                else
                    echo "true=$isBuild" >> $GITHUB_OUTPUT
                fi
            - name: Set up QEMU
              if: ${{ steps.check.outputs.isBuild }} == 'true'
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              if: ${{ steps.check.outputs.isBuild }} == 'true'
              uses: docker/setup-buildx-action@v3
            
            - name: 'Login to GitHub Container Registry'
              if: ${{ steps.check.outputs.isBuild }} == 'true'
              uses: docker/login-action@v1
              with:
                registry: ghcr.io
                username: ${{github.actor}}
                password: ${{secrets.DOCKER_TOKEN}}

            - name: Build Docker Image
              if: ${{ steps.check.outputs.isBuild }} == 'true'
              working-directory: "./transfermarket-api"
              run: | 
                docker build . -t "ghcr.io/sureshchhatwani12/transfermarketapi:${{steps.getsha.outputs.latest_sha}}"
            - name: Push Docker Image
              if: ${{ steps.check.outputs.isBuild }} == 'true'
              working-directory: "./transfermarket-api"
              run: | 
                docker push "ghcr.io/sureshchhatwani12/transfermarketapi:${{steps.getsha.outputs.latest_sha}}"
    
    deployment:
        runs-on: ubuntu-latest
        environment: production
        needs: checkout-transfer-market-api
        permissions:
            id-token: write # This is required for requesting the JWT
        steps:
            - name: 'Az CLI login'
              uses: azure/login@v1
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            - name: 'Updating the app image'
              run: | 
               az webapp config container set --resource-group 'Transfer-Market-API' -n 'opentransfermktapi1'     --docker-custom-image-name  'ghcr.io/sureshchhatwani12/transfermarketapi:${{needs.checkout-transfer-market-api.outputs.imageTag}}'
              
            
